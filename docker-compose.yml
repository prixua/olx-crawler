services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - olx-crawler-network

  app:
    build: .
    container_name: olx-crawler-app
    restart: always
    ports:
      - "8080:8080"
    environment:
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_HOST: mongodb  # Nome do serviço MongoDB
      DUCKDNS_DOMAIN: ${DUCKDNS_DOMAIN}
      DUCKDNS_TOKEN: ${DUCKDNS_TOKEN}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      CRAWLER_EMAIL_FROM: ${CRAWLER_EMAIL_FROM}
      CRAWLER_EMAIL_TO: ${CRAWLER_EMAIL_TO}
      # WHATSAPP_API_URL: http://whatsapp-api:3500  # URL interna para WhatsApp API
    depends_on:
      - mongodb
      # - whatsapp-api
    networks:
      - olx-crawler-network

  # whatsapp-api:
  #   image: prixua/whatsapp-api:latest
  #   container_name: whatsapp-api
  #   restart: always
  #   ports:
  #     - "3500:3500"  # Porta correta baseada no docker ps
  #   environment:
  #     NODE_ENV: production
  #   volumes:
  #     - whatsapp_sessions:/app/sessions  # Persistir sessões do WhatsApp
  #   networks:
  #     - olx-crawler-network

  duckdns:
    image: alpine:3.18
    container_name: duckdns-updater
    restart: always
    environment:
      DUCKDNS_DOMAIN: ${DUCKDNS_DOMAIN}
      DUCKDNS_TOKEN: ${DUCKDNS_TOKEN}
    command: >
      sh -c "while true; do
        echo 'Updating DuckDNS...';
        wget -qO- 'https://www.duckdns.org/update?domains=${DUCKDNS_DOMAIN}&token=${DUCKDNS_TOKEN}&ip=';
        sleep 300;
      done"
    networks:
      - olx-crawler-network

volumes:
  mongo_data:
    external: true
  # whatsapp_sessions:  # Volume para persistir sessões do WhatsApp

networks:
  olx-crawler-network:
    driver: bridge
