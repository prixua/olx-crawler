server:
  port: 8080

spring:
  application:
    name: olx-crawler
  webflux:
    base-path: /
    cors:
      allowed-origins:
        - "https://${DUCKDNS_DOMAIN:olx-crawler}.duckdns.org"
        - "http://localhost:3000"
        - "http://localhost:8080"
      allowed-methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowed-headers:
        - "Content-Type"
        - "Authorization"
        - "X-Requested-With"
        - "x-auth-type"
        - "Accept"
        - "Origin"
      allow-credentials: true
  data:
    mongodb:
      uri: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST:127.0.0.1}:27017/admin
      database: crawler

security:
  jwt:
    secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
    expiration: 86400000 # 24 hours in milliseconds

springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    try-it-out-enabled: true
    operations-sorter: alpha
    tags-sorter: alpha
  show-actuator: false
  paths-to-match: /api/**
  info:
    title: OLX Crawler API
    description: API para crawler OLX
    version: 1.0.0
    contact:
      name: OLX Crawler Team
      email: prixua@gmail.com
  servers:
    - url: http://localhost:8080
      description: Servidor de desenvolvimento

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    br.olx.crawler: DEBUG
    org.springframework: WARN
    reactor.netty: WARN
    spring.data.mongodb.core: DEBUG
